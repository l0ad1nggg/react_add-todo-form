{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getMaxTodoId","ids","Math","max","App","useState","todosFromServer","setTodos","prepTodos","usersFromServer","find","u","preparedTodos","setUserId","userIdError","setUserIdError","setTitle","titleError","setTitleError","action","method","onSubmit","event","preventDefault","newTodo","current","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.543b7d54.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\nexport type Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { TodoWUser } from '../../types/TodoWUser';\nimport { UserInfo } from '../UserInfo';\n\nexport type Props = {\n  todo: TodoWUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { TodoWUser } from '../../types/TodoWUser';\nimport { TodoInfo } from '../TodoInfo';\n\nexport type Props = {\n  todos: TodoWUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoWUser } from './types/TodoWUser';\n\nfunction preparedTodos(todos: TodoWUser[]): TodoWUser[] {\n  return todos.map(todo => {\n    const user = usersFromServer.find((u) => u.id === todo.userId);\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n}\n\nfunction getMaxTodoId(todos: TodoWUser[]) {\n  const ids = todos.map(todo => todo.id);\n\n  return Math.max(...ids, 0);\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const prepTodos: TodoWUser[] = preparedTodos(todos);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (title === '') {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserIdError(true);\n    }\n\n    if (title === '' || userId === 0) {\n      return;\n    }\n\n    const newTodo: TodoWUser = {\n      id: getMaxTodoId(todos) + 1,\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodos(current => [...current, newTodo]);\n\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserIdError(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserIdError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={prepTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}